
****************Circular linked list********************
#include<iostream>
using namespace std;
struct node {
    int data;
    node *next=0;
};
struct node *first=0;
struct node *last;
void create(int a[], int n){
    struct node *temp;
    first=new node;
    first->data=a[0];
    first->next=first;  // here first's nest is pointing to first itself; 
    last=first;
    for(int i=1; i<n  ; i++){
        temp=new node;
        temp->data=a[i];
        temp->next=last->next;  // here temp's next is pointing to last's next;
        last->next=temp;
        last=temp;
    }
}
void display(struct node *p){
    do{
        cout<<p->data<<" ";
        p=p->next;
    } while(p!=first);
}
int main(){
    int a[]={9,8,7,6,5,4,3,2,1};
    int n=sizeof(a)/sizeof(a[0]);
    create(a,n);
    display(first);
    return 0;
}


*********** Deleting a particlular node*************

// key is an int data type which is node's value;
void del(int key){
    struct node *p,*q;
    p=new node; q=new node;
    p=first;
    q=0;
    while(p->data!=key){
        q=p;
        p=p->next;
    }
    q->next=p->next;
    delete p;
}
